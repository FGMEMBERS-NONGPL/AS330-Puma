<?xml version="1.0"?>


<system name="Addon-anim">
    
    <property value="1">systems/rotor/cone-blade-k</property>
    <property>systems/rotor/pos-deg</property>
    <property value="1">systems/rotor/sw-first</property>
    <property value="2.1">systems/rotor/minx-rpm</property>
    <property value="1">animation/variable-rpm</property>
    <property value="0">systems/rotor/raw_pos-deg</property>
    <property value="0">/controls/jump-signal</property>
    <property value="0">animation/left-inter-pos</property>
    <property value="0">animation/right-inter-pos</property>
    <property value="0">animation/third-seat-deployed</property>
    <property value="-2.8">systems/rotor/rotor-deg-corrected</property>
<!--wanted but not in use with the variant ==================-->
    <property value="0">systems/mule/linked</property>
    <property value="1">animation/mule/steering-efficiency</property>

    <channel name="Animation">
        <!--<documentation>Only for 3D model animation</documentation>-->
	
	
	<switch name="animation/pilot-copilot">
            <default value="0"/>
            <test logic="AND" value="1">
                electrical/switch/master  == 1
            </test>
	</switch>

        <switch name="animation/cockpit-left-door-pos">
            <default value="0"/>
            <test logic="AND" value="animation/cockpit-left-door-pos-cmd">
                systems/rotor/collective-cmd-norm  == 0
                gear/unit[0]/WOW == 1
                gear/unit[1]/WOW == 1
                gear/unit[2]/WOW == 1
                propulsion/engine[0]/cutoff == 1
            </test>
        </switch>

        <switch name="animation/cockpit-right-door-pos">
            <default value="0"/>
            <test logic="AND" value="animation/cockpit-right-door-pos-cmd">
                systems/rotor/collective-cmd-norm  == 0
                gear/unit[0]/WOW == 1
                gear/unit[1]/WOW == 1
                gear/unit[2]/WOW == 1
                propulsion/engine[0]/cutoff == 1
            </test>
        </switch>

        <kinematic name="LeftDoor Surface Position">
            <input>animation/cockpit-left-door-pos</input>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>10</time>
                </setting>
            </traverse>
            <output>animation/cockpit-left-door-pos-norm</output>
        </kinematic>
	
	<kinematic name="LeftDoor Windows Surface Position">
            <input>animation/cockpit-left-door_wd-pos-cmd</input>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>8</time>
                </setting>
            </traverse>
            <output>animation/cockpit-left-door_wd-pos-norm</output>
        </kinematic>

        <kinematic name="RightDoor Surface Position">
            <input>animation/cockpit-right-door-pos</input>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>10</time>
                </setting>
            </traverse>
            <output>animation/cockpit-right-door-pos-norm</output>
        </kinematic>
	
	<kinematic name="RightDoor Windows Surface Position">
            <input>animation/cockpit-right-door_wd-pos-cmd</input>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>8</time>
                </setting>
            </traverse>
            <output>animation/cockpit-right-door_wd-pos-norm</output>
        </kinematic>



        <kinematic name="LeftCabinDoor Surface Position">
            <input>animation/left-cabin_door-pos-cmd</input>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>7</time>
                </setting>
            </traverse>
            <output>animation/left-cabin_door-pos-norm</output>
        </kinematic>

        <kinematic name="RightCabinDoor Surface Position">
            <input>animation/right-cabin_door-pos-cmd</input>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>12</time>
                </setting>
            </traverse>
            <output>animation/right-cabin_door-pos-norm</output>
        </kinematic>

        <kinematic name="FloorCabinDoor Surface Position">
            <input>animation/floor-cabin_door-pos-cmd</input>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>6</time>
                </setting>
            </traverse>
            <output>animation/floor-cabin_door-pos-norm</output>
        </kinematic>
	
	
	
	<switch name="animation/third-seat-cmd">
            <default value="0"/>
            <test  logic="AND" value="1">
	       /sim/model/third-seat-selected == 1
	       animation/third-seat-deployed == 1
            </test>
        </switch>
	
	<kinematic name="ThirdSeat Surface Position">
            <input>animation/third-seat-cmd</input>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>6</time>
                </setting>
            </traverse>
            <output>animation/third-seat-pos-norm</output>
        </kinematic>
	
	



        <switch name="animation/parachuter-cmd">
            <default value="0"/>
            <test  logic="AND" value="1">
                animation/left-cabin_door-pos-norm  == 1
                /controls/jump-signal == 1
            </test>
        </switch>
	
	
	
	<summer name="animation/yoke-elevator_limiter">
            <input>fcs/elevator-cmd-norm</input>	    
	     <clipto>
                <min> -0.5 </min>
                <max>  0.5 </max>
            </clipto>
	     <output>animation/yoke-elevator</output>
	</summer>
	
	<summer name="animation/yoke-aileron_limiter">
            <input>fcs/aileron-cmd-norm</input>	    
	     <clipto>
                <min> -0.5 </min>
                <max>  0.5 </max>
            </clipto>
	     <output>animation/yoke-aileron</output>
	</summer>
	
	<summer name="animation/copy-rotor-rpm">
	    <input>propulsion/engine[0]/rotor-rpm</input>
	     <output>animation/rotor-rpm</output>
	</summer>
	
	<summer name="animation/copy-engine-rpm">
            <input>propulsion/engine[0]/engine-rpm</input>
	     <output>animation/engine-rpm</output>
	</summer>
	
	
	<!--=============Landing gear Nose===================-->
	
	<!-- just to fake the nose gear animation when linked to mule-->
	
	<switch name="animation/gear_nose-steering">
           <default value="fcs/steer-pos-deg"/>
           <test  logic="AND" value="animation/mule/steering-efficiency">
                systems/mule/linked == 1
           </test>
       </switch>
       
        <pure_gain name="animation/rudder-free">
           <input>animation/gear_nose-steering</input>
           <gain>0.012500000000</gain> 
	   <!--given gear at 80 deg at rudder  full position-->
       </pure_gain>
       
        <switch name="animation/rudder">
	   <default value="-fcs/rudder-cmd-norm"/>
           <test  logic="AND" value="animation/rudder-free">
                systems/mule/linked == 1
           </test>
       </switch>
	
	<!--=============Electrical Master===================-->
	
	
        
	
	<!--================CutOff==================-->
	
	<switch name="animation/cutoff-master-switch">
            <default value="1"/>
            <test logic="AND" value="0">
               propulsion/engine[0]/cutoff  == 1
            </test>
        </switch>
	
	
	<!--================   Landing -SAR Light==================-->
	
	<switch name="animation/landing-light-pos">
            <default value="0"/>
            <test logic="AND" value="1">
              electrical/lighting/landing-lights  == 1
            </test>
	    <output>animation/landing-light-pos-norm</output>
        </switch>

        <!--====================Rotor  Folding================-->
	
	
	<switch name="systems//blade-fold_sw">
            <default value="fcs/wing-fold-cmd-norm"/>
            <test logic="AND" value="0">
                propulsion/engine[0]/brake-ctrl-norm  == 0
            </test>
	    <output>fcs/wing-fold-cmd-norm</output>
        </switch>

        <switch name="systems/rotor/blade-fold-cmd-norm">
            <default value="0"/>
            <test logic="AND" value="fcs/wing-fold-cmd-norm">
                propulsion/engine[0]/brake-ctrl-norm  == 1
                propulsion/engine[0]/rotor-rpm LE systems/rotor/minx-rpm
		systems/rotor/pos-deg  LT 2
            </test>
        </switch>

        <kinematic name="Blade Fold  Pos Norm">
            <input>systems/rotor/blade-fold-cmd-norm</input>
            <traverse>
                <setting>
                    <position>0</position>
                    <time>0</time>
                </setting>
                <setting>
                    <position>1</position>
                    <time>12</time>
                </setting>
            </traverse>
            <output>fcs/wing-fold-pos-norm</output>
        </kinematic>

        <!--====================Rotor  Positon================-->
        <switch name="systems/rotor/blade-deployed-sw">
            <default value="1"/>
            <test logic="AND" value="0">
               fcs/wing-fold-pos-norm != 0
            </test>
            <output>systems/rotor/blade-deployed</output>
        </switch>

        <pure_gain name="Rotor0 Rotation">
            <input>propulsion/engine[0]/rotor-rpm</input>
            <gain>systems/rotor/blade-deployed</gain>
            <output>animation/rotor/main/rpm</output>
        </pure_gain>
	
	<!--ANIMATION estimate absolute cone -->

        <scheduled_gain name="Rotor0 Cone">
            <input>systems/rotor/cone-blade-k</input>
            <table>
                <independentVar lookup="row">propulsion/engine[0]/thrust-lbs</independentVar>
                <independentVar lookup="column">propulsion/engine[0]/rotor-rpm</independentVar>
                <tableData>
                                0  180
                    0        -10     -1
                    4500  0     	0.5
                    6000  3     	3
                </tableData>
            </table>
            <output>animation/rotor/main/blade/flap-deg-rel</output>
        </scheduled_gain>
	
	
	<!--ANIMATION estimate flap relative value due to ctrl ( lon lat ) and engine thrust-->
	
	<fcs_function name="animation/rotor/main/blade/flap-deg-lat">
	    <function>
		<product>
			<property>propulsion/engine/lateral-ctrl-rad</property>
			<property>propulsion/engine[0]/thrust-lbs</property>
			<value>-0.005</value>
		</product>
	    </function>
	</fcs_function>
	
	<fcs_function name="animation/rotor/main/blade/flap-deg-lon">
	    <function>
		<product>
			<property>propulsion/engine/longitudinal-ctrl-rad</property>
			<property>propulsion/engine[0]/thrust-lbs</property>
			<value>-0.005</value>
		</product>
	    </function>
	</fcs_function>
	
	<!--ANIMATION blades broken at crash-->

        <switch name="animation/rotor/main/blade/flap-deg">
            <default value="animation/rotor/main/blade/flap-deg-rel"/>
            <test logic="OR" value="-30">
                systems/crash-detect/crashed == 1
		systems/sinking/propulsion == 0
            </test>
        </switch>
	
	
	<!--convert pale position to RAD-->
	
	<fcs_function name="animation/rotor/main/pale0pos-rad">
	    <function>
		<product>
		    <property>animation/rotor/main/pale0pos-deg</property>
		    <value>0.017453293</value>
		</product>
	    </function>
	</fcs_function>
	
	<fcs_function name="animation/rotor/main/pale1pos-rad">
	    <function>
		<product>
		    <property>animation/rotor/main/pale1pos-deg</property>
		    <value>0.017453293</value>
		</product>
	    </function>
	</fcs_function>
	
	<fcs_function name="animation/rotor/main/pale2pos-rad">
	    <function>
		<product>
		    <property>animation/rotor/main/pale2pos-deg</property>
		    <value>0.017453293</value>
		</product>
	    </function>
	</fcs_function>
	
	<fcs_function name="animation/rotor/main/pale3pos-rad">
	    <function>
		<product>
		    <property>animation/rotor/main/pale3pos-deg</property>
		    <value>0.017453293</value>
		</product>
	    </function>
	</fcs_function>
	
	<fcs_function name="animation/rotor/main/blade0/flap-deg">
            <function>
                <sum>
		    <product>
			<cos>
			    <property>animation/rotor/main/pale0pos-rad</property>	
			</cos>    
			<property>animation/rotor/main/blade/flap-deg-lon</property>	
		    </product>
		    <product>
			<sin>
			    <property>animation/rotor/main/pale0pos-rad</property>
			</sin>		    
			<property>animation/rotor/main/blade/flap-deg-lat</property>
		    </product>
		    <property>animation/rotor/main/blade/flap-deg</property>
                </sum>
            </function>
        </fcs_function>
	
	<fcs_function name="animation/rotor/main/blade1/flap-deg">
            <function>
                <sum>
		     <product>
			<cos>
			    <property>animation/rotor/main/pale1pos-rad</property>	
			</cos>		    
			<property>animation/rotor/main/blade/flap-deg-lon</property>
		    </product>
		    <product>
			<sin>
			    <property>animation/rotor/main/pale1pos-rad</property>
			</sin>		    
			<property>animation/rotor/main/blade/flap-deg-lat</property>
		    </product>
		    <property>animation/rotor/main/blade/flap-deg</property>
                </sum>
            </function>
        </fcs_function>
	
	<fcs_function name="animation/rotor/main/blade2/flap-deg">
            <function>
                <sum>
		     <product>
			<cos>
			    <property>animation/rotor/main/pale2pos-rad</property>
			</cos>		
			<property>animation/rotor/main/blade/flap-deg-lon</property>	
		    </product>
		    <product>
		    <sin>
			<property>animation/rotor/main/pale2pos-rad</property>
		    </sin>		    
                    <property>animation/rotor/main/blade/flap-deg-lat</property>	
		    </product>
		    <property>animation/rotor/main/blade/flap-deg</property>
                </sum>
            </function>
        </fcs_function>
	
	<fcs_function name="animation/rotor/main/blade3/flap-deg">
            <function>
                <sum>
		     <product>
			<cos>
			    <property>animation/rotor/main/pale3pos-rad</property>
			</cos>
			<property>animation/rotor/main/blade/flap-deg-lon</property>	
		    </product>
		    <product>
		    <sin>
			<property>animation/rotor/main/pale3pos-rad</property>
		    </sin>		    
                   <property>animation/rotor/main/blade/flap-deg-lat</property>	
		    </product>
		    <property>animation/rotor/main/blade/flap-deg</property>
                </sum>
            </function>
        </fcs_function>


        <scheduled_gain name="Rotor0 Torque">
            <input>systems/rotor/blade-deployed</input>
            <table>
                <independentVar>propulsion/engine[0]/torque-lbsft</independentVar>
                <tableData>
                    0           0
                    20000  20000
                </tableData>
            </table>
            <output>systems/rotor/main-torque</output>
        </scheduled_gain>

        <scheduled_gain name="animation/rotor0-rotation_base">
            <input>systems/rotor/blade-deployed</input>
            <table>
                <independentVar>propulsion/engine[0]/rotor-rpm</independentVar>
                <tableData>
                     0        0
                    4          4
                    10      8
                    20      18
                    40      32
                    100     80
                    160     160
                    300     300
                </tableData>
            </table>
        </scheduled_gain>

        <lag_filter name="animation/rotor0-rotation-rel">
            <input>animation/rotor0-rotation_base</input>
            <c1> 0.1 </c1>
        </lag_filter>

        <switch name="animation/rotor0-rotation">
            <default value="animation/rotor0-rotation-rel"/>
            <test logic="OR" value="0">
                systems/crash-detect/crashed == 1
		systems/sinking/propulsion == 0
            </test>
        </switch>

        <!--=======we animate tail rotor according to main rotor=========-->

        <fcs_function name="animation/rotor/tail/rpm-rel">
            <function>
                <product>
                    <property>animation/rotor0-rotation</property>
                    <value>4.8</value>
                </product>
            </function>
        </fcs_function>


        <switch name="animation/rotor/tail/rpm">
            <default value="animation/rotor/tail/rpm-rel"/>
            <test logic="AND" value="0">
		animation/delta-sec == 0
            </test>
        </switch>
        


        <!--360 deg based-->
        <fcs_function name="systems/rotor/velocity-deg-s">
            <function>
                <product>
                    <property>animation/rotor0-rotation</property>
                    <value>6</value>
                </product>
            </function>
        </fcs_function>


<!--===NN==IS an other way to calculate animation blade position=========-->
	<!--BEWARE /rotors/main/blade/position-deg is not the real value , it is only an animation value-->
	
	<!-- for rotor animation, we are missing a valuable sequencial timer clock, but can be done right with nasal (=> look at "time_rotate" func within init-Run.nas file) which provide "systems/rotor/raw-pos-deg"-->
	
	<!--<switch name="systems/rotor/raw-pos-deg_sw">
	    <default value="systems/rotor/raw-pos-deg"/>
	    <test logic="AND" value="0">
		systems/rotor/raw-pos-deg GT 360
	    </test>
	    <output>systems/rotor/raw-pos-deg</output>
	    <output>systems/rotor/pos-deg</output>
	    <output>systems/rotor/pale0pos-deg</output>
	 </switch>  
	 
	 <switch name="animation/delta-sec">
            <default value="/sim/time/delta-sec"/>
	    <test logic="AND" value="0">                
		 simulation/sim-time-sec LT 5.0
            </test>
            <test logic="AND" value="0">
                propulsion/engine[0]/brake-ctrl-norm  == 1
                propulsion/engine[0]/rotor-rpm LE systems/rotor/minx-rpm
		systems/rotor/raw-pos-deg LE 1
            </test>
	     <test logic="AND" value="0">
                fcs/wing-fold-pos-norm  != 0
                propulsion/engine[0]/rotor-rpm LE systems/rotor/minx-rpm
               systems/rotor/raw-pos-deg LE 1
            </test>
	</switch>-->
	 
	 
	<!-- ===NN======================================================-->

        <switch name="animation/delta-sec">
            <default value="sim-delta-sec"/>
	    <test logic="AND" value="0">                
		 simulation/sim-time-sec LT 5.0
            </test>
            <test logic="AND" value="0">
                propulsion/engine[0]/brake-ctrl-norm  == 1
                propulsion/engine[0]/rotor-rpm LE systems/rotor/minx-rpm
		systems/rotor/raw_pos-deg LE 1
            </test>
	</switch>
	
	
	
	<fcs_function name="systems/raw_pos-deg_func">	    
	    <function>	      
		<min>
		    <value>360</value>
		<sum>
		    <product>
			<property>systems/rotor/velocity-deg-s</property>
			<property>animation/delta-sec</property>
		    </product>
		    <property>systems/rotor/pos-deg</property>
		</sum>
	       </min>
	       </function>	       
	    <output>systems/rotor/raw_pos-deg</output>
        </fcs_function>
	
	<switch name="systems/rotor/raw_pos-deg_sw">
		<default value="systems/rotor/raw_pos-deg"/>
		<test logic="OR" value="0">
			systems/rotor/raw_pos-deg == 360
		</test>
		<output>systems/rotor/pos-deg</output>
	</switch>


        <fcs_function name="systems/rotor/pale0pos-deg">
            <function>
                <sum>
                    <property>systems/rotor/pos-deg</property>
		    <property>systems/rotor/rotor-deg-corrected</property>
                    <value>45</value>
                </sum>
            </function>
            <output>animation/rotor/main/pale0pos-deg</output>
        </fcs_function>

        <fcs_function name="systems/rotor/pale1pos-deg">
            <function>
                <sum>
                    <property>animation/rotor/main/pale0pos-deg</property>
		    <property>systems/rotor/rotor-deg-corrected</property>
                    <value>90</value>
                </sum>
            </function>
            <output>animation/rotor/main/pale1pos-deg</output>
        </fcs_function>

        <fcs_function name="systems/rotor/pale2pos-deg">
            <function>
                <sum>
                    <property>animation/rotor/main/pale0pos-deg</property>
		    <property>systems/rotor/rotor-deg-corrected</property>
                    <value>180</value>
                </sum>
            </function>
            <output>animation/rotor/main/pale2pos-deg</output>
        </fcs_function>

        <fcs_function name="systems/rotor/pale3pos-deg">
            <function>
                <sum>
                    <property>animation/rotor/main/pale0pos-deg</property>
		    <property>systems/rotor/rotor-deg-corrected</property>
                    <value>270</value>
                </sum>
            </function>
            <output>animation/rotor/main/pale3pos-deg</output>
        </fcs_function>


    </channel>

    <channel name="Rescue">
        <!--temporary done with Nasal-->
    </channel>

    <channel name="gear-agl-m">
        <fcs_function name="/position/gear-agl-m">
            <function>
                <product>
                    <sum>
                        <value>-3.856</value>
                        <property>position/h-agl-ft</property>
                    </sum>
                    <value>0.3048</value>
                </product>
            </function>
            <output>/position/gear-agl-m</output>
        </fcs_function>
    </channel>





</system>
